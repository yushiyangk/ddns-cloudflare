#!/usr/bin/env bash

# Update Cloudflare DNS using this server's public IP address
# Usage: ./ddns-cloudflare
# Requires curl, jq
# Yu Shiyang <yu.shiyang@gnayihs.uy>

# List of domains to update is given in /usr/local/etc/ddns-cloudflare/domains in this format:
#   domains='example.com', 'subdomain.example.com', '*.wildcard.example.com'
# Authentication information for Cloudflare is given in /usr/local/etc/ddns-cloudflare/auth in this format:
#   zoneid=zoneid
#   authtoken=authtoken
# Single or double quotes are optional


export DDNS_CLOUDFLARE_DIR='/usr/local/etc/ddns-cloudflare'

# auth
zoneid="$( sed -n "s/^\s*zoneid\s*=\s*\(.\+\)/\1/p" "$DDNS_CLOUDFLARE_DIR/auth" | xargs -n 1 )"
authtoken="$( sed -n "s/^\s*authtoken\s*=\s*\(.\+\)/\1/p" "$DDNS_CLOUDFLARE_DIR/auth" | xargs -n 1 )"
# domains
IFS=$'\n' names=( $( sed -n "s/^\s*domains\s*=\s*\(.\+\)/\1/p" "$DDNS_CLOUDFLARE_DIR/domains" | xargs -d ',' -n 1 | xargs -l ) )

unset DDNS_CLOUDFLARE_DIR

publicip="$( curl -s checkip.dyndns.org | cut -d ':' -f 2 | cut -d '<' -f 1 | cut -d ' ' -f 2 )"

echo -e "Detected IP from \e[94mcheckip.dyndns.org\e[39m: \e[97m$publicip\e[39m"

for i in "${names[@]}"; do
	response="$( curl -s -X GET 'https://api.cloudflare.com/client/v4/zones/'"$zoneid"'/dns_records?type=A&name='"${i}" -H 'Content-Type:application/json' -H 'Authorization: Bearer '"$authtoken" )"
	recordip="$( echo "$response" | jq -Mr '.result[0].content' )"
	if [ "$recordip" != "$publicip" ]; then
		recordid="$( echo "$response" | jq -Mr '.result[0].id' )"
		recordttl="$( echo "$response" | jq -Mr '.result[0].ttl' )"
		recordproxied="$( echo "$response" | jq -Mr '.result[0].proxied' )"
		code="$( curl -s -o /tmp/ddns-cloudflare.response -w '%{http_code}' -X PUT 'https://api.cloudflare.com/client/v4/zones/'"$zoneid"'/dns_records/'"$recordid" -H 'Content-Type:application/json' -H 'Authorization: Bearer '"$authtoken" --data '{"type":"A","name":"'"${i}"'","content":"'"$publicip"'","ttl":'"$recordttl"',"proxied":'"$recordproxied"'}' )"
		if [ "$code" == 200 ]; then
			echo -e "200: \e[97m${i}\e[39m updated to $publicip"
		else
			echo -e "\e[31m$code: \e[97m${i}\e[31m failed to update\e[39m"
			cat /tmp/ddns-cloudflare.response
			echo
		fi
		rm /tmp/ddns-cloudflare.response
	else
		echo -e "\e[97m${i}\e[39m unchanged; skipped"
	fi
done
